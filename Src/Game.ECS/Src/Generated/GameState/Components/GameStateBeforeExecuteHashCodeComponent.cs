//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity beforeExecuteHashCodeEntity { get { return GetGroup(GameStateMatcher.BeforeExecuteHashCode).GetSingleEntity(); } }
    public Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent beforeExecuteHashCode { get { return beforeExecuteHashCodeEntity.beforeExecuteHashCode; } }
    public bool hasBeforeExecuteHashCode { get { return beforeExecuteHashCodeEntity != null; } }

    public GameStateEntity SetBeforeExecuteHashCode(long newValue) {
        if (hasBeforeExecuteHashCode) {
            throw new Entitas.EntitasException("Could not set BeforeExecuteHashCode!\n" + this + " already has an entity with Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent!",
                "You should check if the context already has a beforeExecuteHashCodeEntity before setting it or use context.ReplaceBeforeExecuteHashCode().");
        }
        var entity = CreateEntity();
        entity.AddBeforeExecuteHashCode(newValue);
        return entity;
    }

    public void ReplaceBeforeExecuteHashCode(long newValue) {
        var entity = beforeExecuteHashCodeEntity;
        if (entity == null) {
            entity = SetBeforeExecuteHashCode(newValue);
        } else {
            entity.ReplaceBeforeExecuteHashCode(newValue);
        }
    }

    public void RemoveBeforeExecuteHashCode() {
        beforeExecuteHashCodeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent beforeExecuteHashCode { get { return (Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent)GetComponent(GameStateComponentsLookup.BeforeExecuteHashCode); } }
    public bool hasBeforeExecuteHashCode { get { return HasComponent(GameStateComponentsLookup.BeforeExecuteHashCode); } }

    public void AddBeforeExecuteHashCode(long newValue) {
        var index = GameStateComponentsLookup.BeforeExecuteHashCode;
        var component = (Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent)CreateComponent(index, typeof(Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBeforeExecuteHashCode(long newValue) {
        var index = GameStateComponentsLookup.BeforeExecuteHashCode;
        var component = (Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent)CreateComponent(index, typeof(Lockstep.ECS.GameState.BeforeExecuteHashCodeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBeforeExecuteHashCode() {
        RemoveComponent(GameStateComponentsLookup.BeforeExecuteHashCode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherBeforeExecuteHashCode;

    public static Entitas.IMatcher<GameStateEntity> BeforeExecuteHashCode {
        get {
            if (_matcherBeforeExecuteHashCode == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.BeforeExecuteHashCode);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherBeforeExecuteHashCode = matcher;
            }

            return _matcherBeforeExecuteHashCode;
        }
    }
}
